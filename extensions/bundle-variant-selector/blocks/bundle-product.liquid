<form
  method="post"
  action="/cart/add"
  id="product-form-{{ section.id }}"
  class="product-form">
  <input
    type="hidden"
    name="form_type"
    value="product">
  <input
    type="hidden"
    name="utf8"
    value="âœ“">
  <input
    type="hidden"
    id="variant-id"
    name="id"
    value="{{ product.selected_or_first_available_variant.id }}">

    <!-- Hidden input to store all selected variants -->
  <input
    type="hidden"
    id="all-selected-variants"
    name="properties[All Selected Variants]"
    value="">

  <!-- Variant Options -->
  <div id="bundle-variant-selector" data-placeholder-id="{{ product.id }}"></div>

  <!-- Quantity Selector -->
  <div class="product-form__input product-form__input--quantity">
    <label for="Quantity-{{ section.id }}">{{ 'products.product.quantity.label' | t }}</label>
    <quantity-input
      class="quantity"
      data-url="{{ product.url }}"
      data-section="{{ section.id }}">
      <button
        class="quantity__button"
        name="minus"
        type="button">
        <span class="visually-hidden">{{ 'products.product.quantity.decrease' | t }}</span>
        {% render 'icon-minus' %}
      </button>
      <input
        class="quantity__input"
        type="number"
        name="quantity"
        id="Quantity-{{ section.id }}"
        min="1"
        value="1">
      <button
        class="quantity__button"
        name="plus"
        type="button">
        <span class="visually-hidden">{{ 'products.product.quantity.increase' | t }}</span>
        {% render 'icon-plus' %}
      </button>
    </quantity-input>
  </div>

  <!-- Add to Cart Button -->
  <button type="submit" class="product-form__submit button button--primary">
    {{ 'products.product.add_to_cart' | t }}
  </button>
</form>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    var bundleVariantSelector = document.getElementById('bundle-variant-selector');
    var placeholderProductId = bundleVariantSelector.getAttribute('data-placeholder-id');
    var encodedPlaceholderProductId = encodeURIComponent('gid://shopify/Product/' + placeholderProductId);
  
    fetch('https://brass-improving-mc-enters.trycloudflare.com/api/bundle?placeholderProductId=' + encodedPlaceholderProductId)
        .then(response => response.json())
        .then(bundleData => {
            const data = bundleData.bundle.bundleProducts;
            processAndRenderProducts(data);
        })
        .catch(error => console.error('Error fetching bundle data:', error));
  });
  
  let selectedVariants = [];
  let previousType = null;
  
  function processAndRenderProducts(bundleProducts) {
    var bundleVariantSelector = document.getElementById('bundle-variant-selector');
    var allSizes = new Set();
    var typeOptions = {};
  
    bundleProducts.forEach(bundleProduct => {
        var product = bundleProduct.product;
  
        product.variants.forEach(variant => {
            if (variant.sku == null) {
                const parts = variant.title.split(' / ');
                let size, type, design;
  
                if (parts.length === 3) {
                    [size, type, design] = parts;
                } else if (parts.length === 2) {
                    [size, design] = parts;
                    const productTitleParts = product.title.split(' - ');
                    type = productTitleParts.length > 1 ? productTitleParts[1].trim() : 'Default Type';
                } else {
                    return;
                }
  
                allSizes.add(size);
  
                if (!typeOptions[size]) {
                    typeOptions[size] = new Set();
                }
                typeOptions[size].add(type);
            }
        });
    });
  
    let productHtml = `
        <div class="option-group">
            <h4>Select Size:</h4>
            <div class="pills" id="size-options">`;
    allSizes.forEach(size => {
        productHtml += `
            <label class="pill">
                <input type="radio" name="size" value="${size}" data-size="${size}">
                <span>${size}</span>
            </label>`;
    });
    productHtml += `
            </div>
        </div>`;
  
    productHtml += `
        <div class="option-group" id="type-container" style="display: none;">
            <h4>Select Type:</h4>
            <div class="pills" id="type-options"></div>
        </div>
        <div class="option-group" id="design-container" style="display: none;">
            <h4>Select Design:</h4>
            <div class="pills" id="design-options"></div>
        </div>`;
  
    productHtml += `
        <div class="selection-count">0 / 5 selected</div>`;
  
    productHtml += `
        <div id="selected-variants-display" class="selected-variants-display"></div>`;
  
    bundleVariantSelector.innerHTML = productHtml;
  
    document.querySelectorAll('input[name="size"]').forEach(sizeRadio => {
        sizeRadio.addEventListener('change', function () {
            const selectedSize = this.value;
            // previousType = null; // Reset previous type
            updateTypeOptions(bundleProducts, selectedSize, typeOptions);
            updateSelectedClass(this);
        });
    });
  }
  
  function updateTypeOptions(bundleProducts, selectedSize, typeOptions) {
    const typeContainer = document.getElementById('type-container');
    const typeOptionsContainer = document.getElementById('type-options');
    typeOptionsContainer.innerHTML = '';
  
    if (typeOptions[selectedSize]) {
        typeOptions[selectedSize].forEach(type => {
            typeOptionsContainer.innerHTML += `
                <label class="pill">
                    <input type="radio" name="type" value="${type}" data-type="${type}">
                    <span>${type}</span>
                </label>`;
        });
  
        typeContainer.style.display = 'block';
    } else {
        typeContainer.style.display = 'none';
    }
  
    document.querySelectorAll('input[name="type"]').forEach(typeRadio => {
        typeRadio.addEventListener('change', function () {
            const selectedType = this.value;
            previousType = selectedType; // Store the selected type
            updateDesignOptions(bundleProducts, selectedSize, selectedType);
            updateSelectedClass(this);
        });
    });
  }
  
  function updateDesignOptions(bundleProducts, selectedSize, selectedType) {
    const designContainer = document.getElementById('design-container');
    const designOptionsContainer = document.getElementById('design-options');
    designOptionsContainer.innerHTML = '';
  
    const availableDesigns = [];
  
    bundleProducts.forEach(bundleProduct => {
        var product = bundleProduct.product;
        product.variants.forEach(variant => {
            if (variant.sku == null) {
                const parts = variant.title.split(' / ');
                let size, type, design;
  
                if (parts.length === 3) {
                    [size, type, design] = parts;
                } else if (parts.length === 2) {
                    [size, design] = parts;
                    const productTitleParts = product.title.split(' - ');
                    type = productTitleParts.length > 1 ? productTitleParts[1].trim() : 'Default Type';
                } else {
                    return;
                }
  
                if (size === selectedSize && type === selectedType) {
                    availableDesigns.push(design);
                    const designName = design.replace(/\s+/g, '-').toLowerCase();
                    const isSoldOut = variant.inventory_quantity === 0 ? ' (Sold Out)' : '';
  
                    designOptionsContainer.innerHTML += `
                        <label class="pill ${isSoldOut ? 'sold-out' : ''}">
                            <input type="radio" name="design" value="${variant.id}" data-design="${designName}" data-size="${size}" data-type="${type}" ${isSoldOut ? 'disabled' : ''}>
                            <img src="https://cdn.shopify.com/s/files/1/0729/7341/8812/files/${designName}.png" alt="${design}" style="width: 40px; height: 40px;">
                            ${isSoldOut}
                        </label>`;
                }
            }
        });
    });
  
    if (designOptionsContainer.innerHTML.trim() !== '') {
        designContainer.style.display = 'block';
    } else {
        console.log('No design options available for the selected size and type.');
        designContainer.style.display = 'none';
        previousType = null; // Reset previous type if no designs are available
    }
  
    document.querySelectorAll('input[name="design"]').forEach(designRadio => {
        designRadio.addEventListener('change', function () {
            const selectedVariantId = this.value;
            const designName = this.getAttribute('data-design');
            const size = this.getAttribute('data-size');
            const type = this.getAttribute('data-type');
            updateSelectedVariants(selectedVariantId, size, type, designName);
            updateSelectedClass(this);
        });
    });
  }
  
  function updateSelectedClass(radioButton) {
    const label = radioButton.closest('label');
    if (label) {
        const name = radioButton.name;
        document.querySelectorAll(`input[name="${name}"]`).forEach(input => {
            const lbl = input.closest('label');
            if (lbl) {
                lbl.classList.remove('selected');
            }
        });
        label.classList.add('selected');
    }
    updateSelectionCount();
  }
  
  function updateSelectedVariants(variantId, size, type, designName) {
    const hiddenInput = document.getElementById('all-selected-variants');
  
    if (!hiddenInput) {
        console.error('Hidden input element not found.');
        return;
    }
  
    selectedVariants = selectedVariants.filter(variant => !(variant.size === size && variant.type === type && variant.design === designName));
  
    if (!selectedVariants.some(variant => variant.id === variantId)) {
        if (selectedVariants.length < 5) {
            selectedVariants.push({ id: variantId, size: size, type: type, design: designName });
        } else {
            alert('You can only select up to 5 variants.');
            return;
        }
    }
  
    hiddenInput.value = JSON.stringify(selectedVariants);
    renderSelectedVariants();
    updateSelectionCount();
  }
  
  function renderSelectedVariants() {
    const selectedVariantsDisplay = document.getElementById('selected-variants-display');
    selectedVariantsDisplay.innerHTML = '';
  
    selectedVariants.forEach((variant, index) => {
        selectedVariantsDisplay.innerHTML += `
            <div class="selected-variant">
                <img src="https://cdn.shopify.com/s/files/1/0729/7341/8812/files/${variant.design}.png" alt="${variant.design}" style="width: 40px; height: 40px;">
               
                <button class="remove-variant" data-index="${index}">Ã—</button>
            </div>`;
    });
  
    document.querySelectorAll('.remove-variant').forEach(button => {
        button.addEventListener('click', function () {
            const index = this.getAttribute('data-index');
            selectedVariants.splice(index, 1);
            renderSelectedVariants();
            updateSelectionCount();
            document.getElementById('all-selected-variants').value = JSON.stringify(selectedVariants);
        });
    });
  }
  
  function updateSelectionCount() {
    const selectionCountElement = document.querySelector('.selection-count');
    if (selectionCountElement) {
        selectionCountElement.innerText = `${selectedVariants.length} / 5 selected`;
    }
  }
</script>

<style>
  .product {
    margin-bottom: 20px;
  }

  .product-title {
    font-size: 18px;
    margin-bottom: 10px;
  }

  .option-group {
    margin-bottom: 15px;
  }

  .pills {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
  }

  .pill {
    display: inline-block;
    padding: 10px 20px;
    border: 1px solid var(--color-border, #000);
    border-radius: 30px;
    cursor: pointer;
    background-color: var(--color-background, #f5f5f5);
    transition: background-color 0.3s ease
    , color 0.3s ease
    , border-color 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .pill input[type="radio"] {
    display: none;
  }

  .pill.selected {
    background-color: rgb(var(--color-foreground, #000));
    color: var(--color-text-primary, #fff);
    border-color: var(--color-primary, #000);
  }

  .pill img {
    display: block;
  }

  .pill span {
    pointer-events: none;
  }

  .selected-designs {
    margin-top: 20px;
    display: flex;
    gap: 10px;
    align-items: center;
  }

  .selection-count {
    font-size: 14px;
    color: var(--color-text-primary, #333);
  }

  .btn {
    padding: 10px 20px;
    background-color: var(--color-primary, #000);
    color: var(--color-text-primary, #fff);
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .btn:hover {
    background-color: var(--color-primary-hover, #333);
  }
  .selected-variants-display {
    display: flex;
    gap: 10px;
    align-items: center;
    margin-top: 20px;
  }

  .selected-variant {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .variant-image-container {
    width: 100px;
    height: 100px;
    background-color: #f5f5f5;
    border-radius: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    margin-bottom: 5px;
  }

  .variant-image-container img {
    max-width: 100%;
    max-height: 100%;
    object-fit: cover;
  }

  .remove-variant {
    position: absolute;
    top: 0;
    right: 0;
    background-color: #ff0000;
    color: #fff;
    border: none;
    border-radius: 50%;
    width: 20px;
    height: 20px;
    cursor: pointer;
    font-size: 14px;
    display: flex;
    align-items: center;
    justify-content: center;
    line-height: 0;
    transform: translate(50%, -50%);
    transition: background-color 0.3s ease;
  }

  .remove-variant:hover {
    background-color: #cc0000;
  }

</style>