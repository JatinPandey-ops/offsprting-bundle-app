// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}
model Product {
  id                BigInt     @id // Changed from Int to BigInt
  title             String
  handle            String     
  descriptionHtml   String?
  productType       String?
  vendor            String?
  variants          Variant[]  @relation("ProductVariants")
  images            Image[]    @relation("ProductImages")
  bundleProducts    BundleProduct[] @relation("ProductToBundleProduct")
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
}

model Variant {
  id                BigInt        @id @default(autoincrement()) // Auto-incrementing Int ID for variant
  title             String
  price             Float
  sku               String?
  inventoryQuantity Int?
  weight            Float?
  weightUnit        String?
  requiresShipping  Boolean?
  productId         BigInt     // Foreign key to Product model (matching BigInt)
  product           Product    @relation(name: "ProductVariants", fields: [productId], references: [id], onDelete: Cascade)  // Relation to Product model
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
}

model Image {
  id        BigInt        @id @default(autoincrement()) // Auto-incrementing Int ID for image
  src       String     // Source URL of the image
  altText   String?
  productId BigInt     // Foreign key to Product model (matching BigInt)
  product   Product    @relation(name: "ProductImages", fields: [productId], references: [id], onDelete: Cascade)  // Relation to Product model
}

model Bundle {
  id                  BigInt        @id @default(autoincrement())  // Auto-incrementing Int ID
  userChosenName      String
  price               Float
  compareAtPrice      Float?
  maxSelections       Int?         // New field for max selections
  singleDesignSelection Boolean?   // New field for single design selection
  bundleProducts      BundleProduct[] @relation("BundleToBundleProduct")
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
}

model BundleProduct {
  productId BigInt     // Changed to BigInt
  bundleId  BigInt
  product   Product    @relation(name: "ProductToBundleProduct", fields: [productId], references: [id], onDelete: Cascade)
  bundle    Bundle     @relation(name: "BundleToBundleProduct", fields: [bundleId], references: [id], onDelete: Cascade)

  @@id([productId, bundleId])  // Composite primary key
}

